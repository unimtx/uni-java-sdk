/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'com.konghq:unirest-java:3.14.1'
    testImplementation 'junit:junit:4.11'
}

apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.unimtx'
archivesBaseName = 'uni-sdk'
version = '0.2.0'
description = 'The official Unimatrix SDK for Java.'
sourceCompatibility = 1.8
targetCompatibility = 1.8
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

signing {
    sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'Unimatrix Java SDK'
        packaging 'jar'
        description 'The official Unimatrix SDK for Java.'
        url 'https://unimtx.com'

        scm {
          connection 'scm:git:https://github.com/unimtx/uni-java-sdk.git'
          developerConnection 'scm:git:https://github.com/unimtx/uni-java-sdk.git'
          url 'https://github.com/unimtx/uni-java-sdk'
        }

        licenses {
          license {
            name 'MIT License'
            url 'https://github.com/unimtx/uni-java-sdk/blob/main/LICENSE'
          }
        }

        developers {
          developer {
            id 'unimtx'
            name 'Unimatrix'
            email 'dev@unimtx.com'
          }
        }
      }
    }
  }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}
